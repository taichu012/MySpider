<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>MySpider</groupId>
  <artifactId>MySpider</artifactId>
  <version>0.0.3-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>MySpider</name>
  <url>http://maven.apache.org</url>

	<build>
		<finalName>${project.name}_${project.version}_JDK${jdk.version}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${jar.source}</source>
					<target>${jar.target}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- 设置resouce目录下的所有文件编码，否则如果配置xml文件中有中文字符，部署后可能会引起运行失败 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
<!-- 用assembly的execution来自定义源码打包，而不用maven自带的plugin打包
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<attach>false</attach>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>   -->
<!--  			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<archive>
						<manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
						<manifest>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
					<classesDirectory>
					</classesDirectory>
				</configuration>
			</plugin>   -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2</version>
				<configuration>
				<!-- 如果assembly的配置放在所有executions前面则全局起作用
				     那么这里是将依赖jar打入，则会为每个execution都生成一个同样的jar包（带依赖），
				  所以不合适。将下段配置单独用execution包裹后，继承finalname先打包为jar（带依赖）   
					<archive>  
                    	<manifest>  
                        	<mainClass>MySpider.spider.CnblogsSpider.Main</mainClass>  
                    	</manifest>  
                	</archive> 
					<descriptorRefs>  
                    	<descriptorRef>jar-with-dependencies</descriptorRef>  
                	</descriptorRefs>  -->
				</configuration>
				<executions>
					<execution>
						<id>make-bin-jar-with-dependencies</id>
						<goals>
							<goal>single</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<outputDirectory>
								${project.build.directory}/${project.build.finalName}
							</outputDirectory>
							<archive>  
                    			<manifest>  
                        		<mainClass>MySpider.spider.CnblogsSpider.Main</mainClass>  
                    			</manifest>  
                			</archive> 
							<descriptorRefs>  
                    			<descriptorRef>jar-with-dependencies</descriptorRef>  
                			</descriptorRefs> 
						</configuration>
					</execution>
					<!-- 下面将上述jar（带依赖）大包压缩为zip -->
					<execution>
						<id>make-bin-package-as-zip</id>
						<goals>
							<goal>single</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<outputDirectory>
								${project.build.directory}/${project.build.finalName}
							</outputDirectory>
                			<descriptors>
								<descriptor>assembly-bin.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<!-- 下面将所有源码（包括maven的pom.xml及eclipse工程）压缩为zip -->
					<execution>
						<id>make-source-package-as-zip</id>
						<goals>
							<goal>single</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<finalName>${project.name}_${project.version}_JDK${jdk.version}_src</finalName>
							<outputDirectory>
								${project.build.directory}/${project.build.finalName}
							</outputDirectory>
							<descriptors>
								<descriptor>assembly-src.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdk.version>1.8</jdk.version>
	</properties>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
    <groupId>us.codecraft</groupId>
    <artifactId>webmagic-core</artifactId>
    <version>0.5.3</version>
</dependency>
<dependency>
    <groupId>us.codecraft</groupId>
    <artifactId>webmagic-extension</artifactId>
    <version>0.5.3</version>
</dependency>
  </dependencies>
</project>
